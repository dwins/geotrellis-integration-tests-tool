datasets = [
  {
    name                 = nex
    type                 = accumulo
    tileType             = singleband
    ingestType           = spatial
    loadPath             = /geotrellis-integration-load/
    ingestPath           = gtintegration
    resampleMethod       = bilinear //or "nearest_neighbor" if it's continuous, bilinear, if it's a classification (NLCD), nearest neighbor
    validationExtentSize = .3 // Means to take up a random 30% of extent for validation
  },
  {
    name                 = nex
    type                 = file
    tileType             = singleband
    ingestType           = spatial
    loadPath             = /tmp/geotrellis-integration-load/
    ingestPath           = /tmp/geotrellis-integration/
    resampleMethod       = bilinear //or "nearest_neighbor" if it's continuous, bilinear, if it's a classification (NLCD), nearest neighbor
    validationExtentSize = .3 // Means to take up a random 30% of extent for validation
  },
  {
    name                 = nex
    type                 = s3
    tileType             = singleband
    ingestType           = spatial
    loadPath             = "s3://geotrellis-test/nex-geotiff"
    ingestPath           = geotrellis-test/gt-integration-test
    resampleMethod       = bilinear //or "nearest_neighbor" if it's continuous, bilinear, if it's a classification (NLCD), nearest neighbor
    validationExtentSize = .3 // Means to take up a random 30% of extent for validation
  },
  {
    name                 = nex
    type                 = hadoop
    tileType             = singleband
    ingestType           = spatial
    loadPath             = /geotrellis-integration-load/
    ingestPath           = /geotrellis-integration/
    resampleMethod       = bilinear //or "nearest_neighbor" if it's continuous, bilinear, if it's a classification (NLCD), nearest neighbor
    validationExtentSize = .3 // Means to take up a random 30% of extent for validation
  },
  {
    name                 = nex
    type                 = accumulo
    tileType             = singleband
    ingestType           = temporal
    timeTag              = "ISO_TIME"
    timeFormat           = "yyyy-MM-dd'T'HH:mm:ss"
    loadPath             = /geotrellis-integration-load-temporal/
    ingestPath           = gtintegration-temporal
    resampleMethod       = bilinear //or "nearest_neighbor" if it's continuous, bilinear, if it's a classification (NLCD), nearest neighbor
    validationExtentSize = .3 // Means to take up a random 30% of extent for validation
  },
  {
    name                 = nex
    type                 = file
    tileType             = singleband
    ingestType           = temporal
    timeTag              = "ISO_TIME"
    timeFormat           = "yyyy-MM-dd'T'HH:mm:ss"
    loadPath             = /tmp/geotrellis-integration-load-temporal/
    ingestPath           = /tmp/geotrellis-integration-temporal/
    resampleMethod       = bilinear //or "nearest_neighbor" if it's continuous, bilinear, if it's a classification (NLCD), nearest neighbor
    validationExtentSize = .3 // Means to take up a random 30% of extent for validation
  },
  {
    name                 = nex
    type                 = s3
    tileType             = singleband
    ingestType           = temporal
    timeTag              = "ISO_TIME"
    timeFormat           = "yyyy-MM-dd'T'HH:mm:ss"
    loadPath             = geotrellis-test/nex-geotiff
    ingestPath           = geotrellis-test/gt-integration-temporal-test
    resampleMethod       = bilinear //or "nearest_neighbor" if it's continuous, bilinear, if it's a classification (NLCD), nearest neighbor
    validationExtentSize = .3 // Means to take up a random 30% of extent for validation
  },
  {
    name                 = nex
    type                 = hadoop
    tileType             = singleband
    ingestType           = temporal
    timeTag              = "ISO_TIME"
    timeFormat           = "yyyy-MM-dd'T'HH:mm:ss"
    loadPath             = /geotrellis-integration-load-temporal/
    ingestPath           = /geotrellis-integration-temporal/
    resampleMethod       = bilinear //or "nearest_neighbor" if it's continuous, bilinear, if it's a classification (NLCD), nearest neighbor
    validationExtentSize = .3 // Means to take up a random 30% of extent for validation
  }
]

s3 {
  // it's local machine settings ?
}

accumulo {
  instance   = gis
  zookeepers = localhost
  user       = root
  password   = secret
}

hadoop {
  // no needs in settings?
}

file {
  // no needs in settings?
}

// deprecated stuff
validation {
  tiff = tasmax_amon_BCSD_rcp26_r1i1p1_CONUS_CCSM4_200601-201012-200601120000_0_0.tif
  dir  = /data/tmp/
}

timeTag              = "ISO_TIME"
timeFormat           = "yyyy-MM-dd'T'HH:mm:ss"
